"use strict";var _slicedToArray=function(e,r){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e)){for(var t,a=[],s=e[Symbol.iterator]();!(t=s.next()).done&&(a.push(t.value),!r||a.length!==r););return a}throw new TypeError("Invalid attempt to destructure non-iterable instance")};!function(){function e(e){function r(r,t,a){function s(){r.$broadcast("awesomeSort.resetClass")}function n(r,t,s,n){return t=(t||"").toLowerCase(),s||n?s?t?e("filter")(r,function(e){return s.some(function(r){return r=(a(r)(e)||"").toLowerCase(),r.indexOf(t)>-1})}):r:n(r,t)||[]:e("filter")(r,t)||[]}var o=this;this.page=0,this.perPage=-1,this.resetSortClasses=s,this.sort=t.initialSort,r.$watch(function(){return[o.items,o.search,o.sort,o.reverse,o.page,o.perPage,o.searchFields,o.searchFn]},function(r){var t=_slicedToArray(r,8),a=t[0],s=t[1],i=t[2],c=t[3],u=t[4],l=t[5],p=t[6],d=t[7],m=n(a,s,p,d);o.filtered=e("orderBy")(m,i,c);var f=u*l,g=f+l;o.displayed=o.filtered.slice(f,g)},!0)}return r.$inject=["$scope","$attrs","$parse"],{scope:{items:"=",displayed:"="},transclude:!0,replace:!0,template:'<div class="awesome-list" ng-transclude></div>',controller:r,controllerAs:"awl",bindToController:!0}}angular.module("awesomeList",[]).directive("awesomeList",e),e.$inject=["$filter","$parse"]}(),function(){function e(){function e(e,r,t,a){function s(r){0>r?r=0:r>=e.pageCount&&(r=e.pageCount-1),e.curPage=a.page=r}function n(e,r){for(var t=[],a=e;r>a;a++)t.push(a);return t}e.curPage=a.page=0,a.perPage=10,e.jump=s,e.$watch(function(){return a.filtered.length},function(r){e.pageCount=Math.ceil(r/a.perPage),e.pages=n(0,e.pageCount),s(a.page)})}return{require:"^awesomeList",scope:{},template:'\n                <div class="awesome-pagination">\n                    <span ng-click="jump(curPage - 1)">&laquo;</span>\n                    <span ng-click="jump(page)" ng-repeat="page in pages" ng-class="{ selected: curPage == page }">{{ page + 1 }}</span>\n                    <span ng-click="jump(curPage + 1)">&raquo;</span>\n                </div>\n            ',link:e}}angular.module("awesomeList").directive("awesomePagination",e)}(),function(){function e(){function e(e,r,t,a){if(e.update=function(e){a.search=e},e.searchFields&&e.searchFn)throw"awesomeSearch Directive: Attributes [searchFields] and [searchFn] are mutually exclusive. Use one or the other.";e.searchFn?a.searchFn=e.searchFn:e.searchFields&&e.$watch("searchFields",function(e){return a.searchFields=e})}return{require:"^awesomeList",scope:{searchFields:"=?",searchFn:"&?"},replace:!0,template:'<input placeholder="Search" type="search" class="awesome-search" ng-model="search" ng-change="update(search)">',link:e}}angular.module("awesomeList").directive("awesomeSearch",e),e.$inject=["$parse"]}(),function(){function e(){function e(e,r){e.$on("awesomeSort.resetClass",function(){r.removeClass(""+t+" "+a)})}function r(e,r,n,o){function i(){o.reverse=!o.reverse,r.addClass(t),r.toggleClass(a,o.reverse)}function c(){o.reverse=!1,o.sort=n.awesomeSort,o.resetSortClasses(),r.addClass(t)}r.addClass(s),o.sort===n.awesomeSort?c():o.sort==="-"+n.awesomeSort&&(o.sort=n.awesomeSort,i()),r.bind("click",function(){e.$apply(function(){o.sort==n.awesomeSort?i():c()})})}var t="awesome-sorted",a="awesome-sorted-reverse",s="awesome-sortable";return e.$inject=["$scope","$element"],{require:"^awesomeList",scope:{},controller:e,link:r}}angular.module("awesomeList").directive("awesomeSort",e)}();