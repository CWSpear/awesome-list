"use strict";var _slicedToArray=function(e,r){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e)){for(var t,s=[],a=e[Symbol.iterator]();!(t=a.next()).done&&(s.push(t.value),!r||s.length!==r););return s}throw new TypeError("Invalid attempt to destructure non-iterable instance")};!function(){function e(e){function r(r,t,s){function a(){var r=void 0===arguments[0]?{}:arguments[0],t=r.filter,s=void 0===t?!0:t,a=r.sort,n=void 0===a?!0:a,o=this.filtered||[];s&&(o=i(this.items,this.search,this.searchFields,this.searchFn)||[]),this.filtered=o,n&&(this.filtered=e("orderBy")(o,this.sort,this.reverse));var c=this.page*this.pageSize,l=c+this.pageSize;this.displayed=this.filtered.slice(c,l)}function n(){r.$broadcast("awesomeSort.resetClass")}function i(r,t,a,n){return t=(t||"").toLowerCase(),a||n?a?t?e("filter")(r,function(e){return a.some(function(r){return r=(s(r)(e)||"").toLowerCase(),r.indexOf(t)>-1})}):r:n(r,t)||[]:e("filter")(r,t)||[]}var o=this;this.page=0,this.pageSize=-1,this.resetSortClasses=n,this.sort=t.initialSort,this.$render=a.bind(this),r.$on("awesomeList.render",this.$render),r.$watch(function(){return(o.items||[]).length},this.$render)}return r.$inject=["$scope","$attrs","$parse"],{scope:{items:"=",displayed:"="},transclude:!0,replace:!0,template:'<div class="awesome-list" ng-transclude></div>',controller:r,controllerAs:"awl",bindToController:!0}}angular.module("awesomeList",[]).directive("awesomeList",e),e.$inject=["$filter","$parse"]}(),function(){function e(){function e(e,r,t,s){function a(){e.pageCount=Math.ceil(s.filtered.length/s.pageSize);var r=0,t=e.pageCount;if(e.chompPages){var a=n(),o=_slicedToArray(a,2);r=o[0],t=o[1]}e.pages=c(r,t),i(s.page),s.$render({filter:!1,sort:!1})}function n(){var r=Math.max(0,Math.min(e.pageCount-e.chomp,e.curPage-Math.floor(e.chomp/2)));e.chompStart=r>0;var t=Math.min(e.pageCount,r+1*e.chomp);return e.chompEnd=t<e.pageCount,[r,t]}function i(r){e.curPage=s.page=o(r)}function o(r){return 0>r?r=0:r>0&&r>=e.pageCount&&(r=e.pageCount-1),r}function c(e,r){for(var t=[],s=e;r>s;s++)t.push(s);return t}e.chompPages=!1,e.curPage=s.page=0,s.pageSize=e.pageSize||10,t.chomp&&(e.chompPages=!0),e.jump=i,e.$watch("pageSize",function(r){return r&&(s.pageSize=e.pageSize=r)&&s.$render({filter:!1,sort:!1})}),e.$watch(function(){return[s.filtered.length,e.pageSize].join("|")},a),e.$watch(function(){return o(e.curPage)},a)}return{require:"^awesomeList",scope:{pageSize:"=?",chomp:"@?"},replace:!0,template:'\n                <ul class="awesome-pagination">\n                    <li ng-class="{ disabled: curPage <= 0 }">\n                        <span ng-click="jump(curPage - 1)">&laquo;</span>\n                    </li>\n                    <li class="chomped" ng-show="chompPages && chompStart">\n                        <span>&hellip;</span>\n                    </li>\n                    <li ng-repeat="page in pages" ng-class="{ active: curPage == page }">\n                        <span ng-click="jump(page)">{{ page + 1 }}</span>\n                    </li>\n                    <li class="chomped" ng-show="chompPages && chompEnd">\n                        <span>&hellip;</span>\n                    </li>\n                    <li ng-class="{ disabled: curPage >= pageCount - 1 }">\n                        <span ng-click="jump(curPage + 1)">&raquo;</span>\n                    </li>\n                </ul>\n            ',link:e}}angular.module("awesomeList").directive("awesomePagination",e)}(),function(){function e(){function e(e,r,t,s){if(e.update=function(e){s.search=e,s.$render()},t.searchFields&&t.searchFn)throw new Error("awesomeSearch Directive: Attributes [searchFields] and [searchFn] are mutually exclusive. Use one or the other.");t.searchFn?(console.warn("searchFn is still untested"),s.searchFn=e.searchFn):t.searchFields&&(s.searchFields=e.searchFeilds,e.$watch("searchFields",function(e){s.searchFields=e,s.$render()}))}return{require:"^awesomeList",scope:{searchFields:"=?",searchFn:"&?"},replace:!0,template:'<input placeholder="Search" type="search" class="awesome-search" ng-model="search" ng-change="update(search)" />',link:e}}angular.module("awesomeList").directive("awesomeSearch",e)}(),function(){function e(){function e(e,r){e.$on("awesomeSort.resetClass",function(){r.removeClass(""+t+" "+s)})}function r(e,r,n,i){function o(){i.reverse=!i.reverse,r.addClass(t),r.toggleClass(s,i.reverse),i.$render({filter:!1})}function c(){i.reverse=!1,i.sort=n.awesomeSort,i.resetSortClasses(),r.addClass(t),i.$render({filter:!1})}r.addClass(a),i.sort===n.awesomeSort?c():i.sort==="-"+n.awesomeSort&&(i.sort=n.awesomeSort,o()),r.bind("click",function(){e.$apply(function(){i.sort==n.awesomeSort?o():c()})})}var t="awesome-sorted",s="awesome-sorted-reverse",a="awesome-sortable";return e.$inject=["$scope","$element"],{require:"^awesomeList",scope:{},controller:e,link:r}}angular.module("awesomeList").directive("awesomeSort",e)}();