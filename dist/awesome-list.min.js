"use strict";!function(){function e(e){function a(a,s,r){function t(){a.$broadcast("awesomeSort.resetClass")}function n(a,s,t,n){return s=(s||"").toLowerCase(),t||n?t?s?e("filter")(a,function(e){return t.some(function(a){return a=(r(a)(e)||"").toLowerCase(),a.indexOf(s)>-1})}):a:n(a,s)||[]:e("filter")(a,s)||[]}var o=this;this.page=0,this.perPage=-1,this.resetSortClasses=t,this.sort=s.initialSort;var i=function(){var a=n(this.items,this.search,this.searchFields,this.searchFn)||[];this.filtered=e("orderBy")(a,this.sort,this.reverse);var s=this.page*this.perPage,r=s+this.perPage;this.displayed=this.filtered.slice(s,r)}.bind(this);this.$render=i,a.$on("awesomeList.render",i),a.$watch(function(){return(o.items||[]).length?[(o.items||[]).length,o.search,o.sort,o.reverse,o.page,o.perPage,(o.searchFields||[]).join("|")].join("|"):null},i)}return a.$inject=["$scope","$attrs","$parse"],{scope:{items:"=",displayed:"="},transclude:!0,replace:!0,template:'<div class="awesome-list" ng-transclude></div>',controller:a,controllerAs:"awl",bindToController:!0}}angular.module("awesomeList",[]).directive("awesomeList",e),e.$inject=["$filter","$parse"]}(),function(){function e(){function e(e,a,s,r){function t(){e.pageCount=Math.ceil(r.filtered.length/r.perPage);var a=0,s=e.pageCount;e.chompPages&&(a=Math.max(0,Math.min(e.pageCount-e.chomp,e.curPage-Math.floor(e.chomp/2))),e.chompStart=a>0,s=Math.min(e.pageCount,a+1*e.chomp),e.chompEnd=s<e.pageCount),e.pages=i(a,s),n(r.page)}function n(a){e.curPage=r.page=o(a)}function o(a){return 0>a?a=0:a>0&&a>=e.pageCount&&(a=e.pageCount-1),a}function i(e,a){for(var s=[],r=e;a>r;r++)s.push(r);return s}e.chompPages=!1,e.curPage=r.page=0,r.perPage=e.perPage||10,s.chomp&&(e.chompPages=!0),e.jump=n,e.$watch("perPage",function(a){return a&&(r.perPage=e.perPage=a)}),e.$watch(function(){return[r.filtered.length,e.perPage].join("|")},t),e.chompPages&&e.$watch(function(){return o(e.curPage)},t)}return{require:"^awesomeList",scope:{perPage:"=?",chomp:"@?"},replace:!0,template:'\n                <ul class="awesome-pagination">\n                    <li ng-class="{ disabled: curPage <= 0 }">\n                        <span ng-click="jump(curPage - 1)">&laquo;</span>\n                    </li>\n                    <li class="chomped" ng-show="chompPages && chompStart">\n                        <span>&hellip;</span>\n                    </li>\n                    <li ng-repeat="page in pages" ng-class="{ active: curPage == page }">\n                        <span ng-click="jump(page)">{{ page + 1 }}</span>\n                    </li>\n                    <li class="chomped" ng-show="chompPages && chompEnd">\n                        <span>&hellip;</span>\n                    </li>\n                    <li ng-class="{ disabled: curPage >= pageCount - 1 }">\n                        <span ng-click="jump(curPage + 1)">&raquo;</span>\n                    </li>\n                </ul>\n            ',link:e}}angular.module("awesomeList").directive("awesomePagination",e)}(),function(){function e(){function e(e,a,s,r){if(e.update=function(e){r.search=e},s.searchFields&&s.searchFn)throw new Error("awesomeSearch Directive: Attributes [searchFields] and [searchFn] are mutually exclusive. Use one or the other.");s.searchFn?r.searchFn=e.searchFn:s.searchFields&&e.$watch("searchFields",function(e){return r.searchFields=e})}return{require:"^awesomeList",scope:{searchFields:"=?",searchFn:"&?"},replace:!0,template:'<input placeholder="Search" type="search" class="awesome-search" ng-model="search" ng-change="update(search)" />',link:e}}angular.module("awesomeList").directive("awesomeSearch",e)}(),function(){function e(){function e(e,a){e.$on("awesomeSort.resetClass",function(){a.removeClass(""+s+" "+r)})}function a(e,a,n,o){function i(){o.reverse=!o.reverse,a.addClass(s),a.toggleClass(r,o.reverse)}function c(){o.reverse=!1,o.sort=n.awesomeSort,o.resetSortClasses(),a.addClass(s)}a.addClass(t),o.sort===n.awesomeSort?c():o.sort==="-"+n.awesomeSort&&(o.sort=n.awesomeSort,i()),a.bind("click",function(){e.$apply(function(){o.sort==n.awesomeSort?i():c()})})}var s="awesome-sorted",r="awesome-sorted-reverse",t="awesome-sortable";return e.$inject=["$scope","$element"],{require:"^awesomeList",scope:{},controller:e,link:a}}angular.module("awesomeList").directive("awesomeSort",e)}();