"use strict";!function(){function e(e){function a(a,r,n){function s(){a.$broadcast("awesomeSort.resetClass")}function t(a,r,s,t){return r=(r||"").toLowerCase(),s||t?s?r?e("filter")(a,function(e){return s.some(function(a){return a=(n(a)(e)||"").toLowerCase(),a.indexOf(r)>-1})}):a:t(a,r)||[]:e("filter")(a,r)||[]}var o=this;this.page=0,this.perPage=-1,this.resetSortClasses=s,this.sort=r.initialSort,a.$watch(function(){return(o.items||[]).length?[(o.items||[]).length,o.search,o.sort,o.reverse,o.page,o.perPage,(o.searchFields||[]).join("|")].join("|"):null},function(){var a=t(o.items,o.search,o.searchFields,o.searchFn)||[];o.filtered=e("orderBy")(a,o.sort,o.reverse);var r=o.page*o.perPage,n=r+o.perPage;o.displayed=o.filtered.slice(r,n)},!0)}return a.$inject=["$scope","$attrs","$parse"],{scope:{items:"=",displayed:"="},transclude:!0,replace:!0,template:'<div class="awesome-list" ng-transclude></div>',controller:a,controllerAs:"awl",bindToController:!0}}angular.module("awesomeList",[]).directive("awesomeList",e),e.$inject=["$filter","$parse"]}(),function(){function e(){function e(e,a,r,n){function s(){e.pageCount=Math.ceil(n.filtered.length/n.perPage);var a=0,r=e.pageCount;e.chompPages&&(a=Math.max(0,Math.min(e.pageCount-e.chomp,e.curPage-Math.floor(e.chomp/2))),e.chompStart=a>0,r=Math.min(e.pageCount,a+1*e.chomp),e.chompEnd=r<e.pageCount),e.pages=c(a,r),t(n.page)}function t(a){e.curPage=n.page=o(a)}function o(a){return 0>a?a=0:a>=e.pageCount&&(a=e.pageCount-1),a}function c(e,a){for(var r=[],n=e;a>n;n++)r.push(n);return r}e.chompPages=!1,e.curPage=n.page=0,n.perPage=e.perPage||10,r.chomp&&(e.chompPages=!0),e.jump=t,e.$watch("perPage",function(a){return a&&(n.perPage=e.perPage=a)}),e.$watch(function(){return[n.filtered.length,e.perPage].join("|")},s),e.chompPages&&e.$watch(function(){return o(e.perPage)},s)}return{require:"^awesomeList",scope:{perPage:"=?",chomp:"@?"},replace:!0,template:'\n                <ul class="awesome-pagination">\n                    <li ng-class="{ disabled: curPage <= 0 }">\n                        <span ng-click="jump(curPage - 1)">&laquo;</span>\n                    </li>\n                    <li class="chomped" ng-show="chompPages && chompStart">\n                        <span>&hellip;</span>\n                    </li>\n                    <li ng-repeat="page in pages" ng-class="{ active: curPage == page }">\n                        <span ng-click="jump(page)">{{ page + 1 }}</span>\n                    </li>\n                    <li class="chomped" ng-show="chompPages && chompEnd">\n                        <span>&hellip;</span>\n                    </li>\n                    <li ng-class="{ disabled: curPage >= pageCount - 1 }">\n                        <span ng-click="jump(curPage + 1)">&raquo;</span>\n                    </li>\n                </ul>\n            ',link:e}}angular.module("awesomeList").directive("awesomePagination",e)}(),function(){function e(){function e(e,a,r,n){if(e.update=function(e){n.search=e},r.searchFields&&r.searchFn)throw new Error("awesomeSearch Directive: Attributes [searchFields] and [searchFn] are mutually exclusive. Use one or the other.");r.searchFn?n.searchFn=e.searchFn:r.searchFields&&e.$watch("searchFields",function(e){return n.searchFields=e})}return{require:"^awesomeList",scope:{searchFields:"=?",searchFn:"&?"},replace:!0,template:'<input placeholder="Search" type="search" class="awesome-search" ng-model="search" ng-change="update(search)" />',link:e}}angular.module("awesomeList").directive("awesomeSearch",e)}(),function(){function e(){function e(e,a){e.$on("awesomeSort.resetClass",function(){a.removeClass(""+r+" "+n)})}function a(e,a,t,o){function c(){o.reverse=!o.reverse,a.addClass(r),a.toggleClass(n,o.reverse)}function i(){o.reverse=!1,o.sort=t.awesomeSort,o.resetSortClasses(),a.addClass(r)}a.addClass(s),o.sort===t.awesomeSort?i():o.sort==="-"+t.awesomeSort&&(o.sort=t.awesomeSort,c()),a.bind("click",function(){e.$apply(function(){o.sort==t.awesomeSort?c():i()})})}var r="awesome-sorted",n="awesome-sorted-reverse",s="awesome-sortable";return e.$inject=["$scope","$element"],{require:"^awesomeList",scope:{},controller:e,link:a}}angular.module("awesomeList").directive("awesomeSort",e)}();