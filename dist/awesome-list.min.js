"use strict";var _slicedToArray=function(e,r){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e)){for(var a,n=[],t=e[Symbol.iterator]();!(a=t.next()).done&&(n.push(a.value),!r||n.length!==r););return n}throw new TypeError("Invalid attempt to destructure non-iterable instance")};!function(){function e(e){function r(r,a,n){function t(){var r=i(this.items,this.search,this.searchFields,this.searchFn)||[];this.filtered=e("orderBy")(r,this.sort,this.reverse);var a=this.page*this.pageSize,n=a+this.pageSize;this.displayed=this.filtered.slice(a,n)}function s(){r.$broadcast("awesomeSort.resetClass")}function i(r,a,t,s){return a=(a||"").toLowerCase(),t||s?t?a?e("filter")(r,function(e){return t.some(function(r){return r=(n(r)(e)||"").toLowerCase(),r.indexOf(a)>-1})}):r:s(r,a)||[]:e("filter")(r,a)||[]}var o=this;this.page=0,this.pageSize=-1,this.resetSortClasses=s,this.sort=a.initialSort,this.$render=t.bind(this),r.$on("awesomeList.render",this.$render),r.$watch(function(){return(o.items||[]).length},this.$render)}return r.$inject=["$scope","$attrs","$parse"],{scope:{items:"=",displayed:"="},transclude:!0,replace:!0,template:'<div class="awesome-list" ng-transclude></div>',controller:r,controllerAs:"awl",bindToController:!0}}angular.module("awesomeList",[]).directive("awesomeList",e),e.$inject=["$filter","$parse"]}(),function(){function e(){function e(e,r,a,n){function t(){e.pageCount=Math.ceil(n.filtered.length/n.pageSize);var r=0,a=e.pageCount;if(e.chompPages){var t=s(),o=_slicedToArray(t,2);r=o[0],a=o[1]}e.pages=c(r,a),i(n.page),n.$render()}function s(){var r=Math.max(0,Math.min(e.pageCount-e.chomp,e.curPage-Math.floor(e.chomp/2)));e.chompStart=r>0;var a=Math.min(e.pageCount,r+1*e.chomp);return e.chompEnd=a<e.pageCount,[r,a]}function i(r){e.curPage=n.page=o(r)}function o(r){return 0>r?r=0:r>0&&r>=e.pageCount&&(r=e.pageCount-1),r}function c(e,r){for(var a=[],n=e;r>n;n++)a.push(n);return a}e.chompPages=!1,e.curPage=n.page=0,n.pageSize=e.pageSize||10,a.chomp&&(e.chompPages=!0),e.jump=i,e.$watch("pageSize",function(r){return r&&(n.pageSize=e.pageSize=r)&&n.$render()}),e.$watch(function(){return[n.filtered.length,e.pageSize].join("|")},t),e.$watch(function(){return o(e.curPage)},t)}return{require:"^awesomeList",scope:{pageSize:"=?",chomp:"@?"},replace:!0,template:'\n                <ul class="awesome-pagination">\n                    <li ng-class="{ disabled: curPage <= 0 }">\n                        <span ng-click="jump(curPage - 1)">&laquo;</span>\n                    </li>\n                    <li class="chomped" ng-show="chompPages && chompStart">\n                        <span>&hellip;</span>\n                    </li>\n                    <li ng-repeat="page in pages" ng-class="{ active: curPage == page }">\n                        <span ng-click="jump(page)">{{ page + 1 }}</span>\n                    </li>\n                    <li class="chomped" ng-show="chompPages && chompEnd">\n                        <span>&hellip;</span>\n                    </li>\n                    <li ng-class="{ disabled: curPage >= pageCount - 1 }">\n                        <span ng-click="jump(curPage + 1)">&raquo;</span>\n                    </li>\n                </ul>\n            ',link:e}}angular.module("awesomeList").directive("awesomePagination",e)}(),function(){function e(){function e(e,r,a,n){if(e.update=function(e){n.search=e,n.$render()},a.searchFields&&a.searchFn)throw new Error("awesomeSearch Directive: Attributes [searchFields] and [searchFn] are mutually exclusive. Use one or the other.");a.searchFn?(console.warn("searchFn is still untested"),n.searchFn=e.searchFn):a.searchFields&&(n.searchFields=e.searchFeilds,e.$watch("searchFields",function(e){n.searchFields=e,n.$render()}))}return{require:"^awesomeList",scope:{searchFields:"=?",searchFn:"&?"},replace:!0,template:'<input placeholder="Search" type="search" class="awesome-search" ng-model="search" ng-change="update(search)" />',link:e}}angular.module("awesomeList").directive("awesomeSearch",e)}(),function(){function e(){function e(e,r){e.$on("awesomeSort.resetClass",function(){r.removeClass(""+a+" "+n)})}function r(e,r,s,i){function o(){i.reverse=!i.reverse,r.addClass(a),r.toggleClass(n,i.reverse),i.$render()}function c(){i.reverse=!1,i.sort=s.awesomeSort,i.resetSortClasses(),r.addClass(a),i.$render()}r.addClass(t),i.sort===s.awesomeSort?c():i.sort==="-"+s.awesomeSort&&(i.sort=s.awesomeSort,o()),r.bind("click",function(){e.$apply(function(){i.sort==s.awesomeSort?o():c()})})}var a="awesome-sorted",n="awesome-sorted-reverse",t="awesome-sortable";return e.$inject=["$scope","$element"],{require:"^awesomeList",scope:{},controller:e,link:r}}angular.module("awesomeList").directive("awesomeSort",e)}();